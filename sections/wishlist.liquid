<style>
  /* Styles for the quick view modal */
  .quick-view-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    display: none;
    justify-content: center;
    align-items: center;
    z-index: 9999;
  }

  .quick-view-content {
    background: #fff;
    padding: 20px;
    overflow: auto;
    width: 1024px;
    height: 700px;
  }

  /* Styles for the quick view close button */
  .quick-view-close {
    position: absolute;
    top: 10px;
    right: 10px;
    cursor: pointer;
  }

  button.add_cart_btn {
    border: navajowhite;
    padding: 7px 10px;
    font-size: 14px;
  }

  /* modal galary image style */
  .galery_img ul {
    display: flex !important;
    flex-wrap: wrap;
    gap: 20px;
  }
  .galery_img ul li {
    height: 150px;
    width: 150px;
  }

  /* product quick view  */
  .product_name {
    width: 200px;
    height: 200px;
    margin-top: 100px;
    margin-bottom: 500px;
  }
  .wishlist_product_container {
    display: grid !important;
    grid-template-columns: repeat(4, 1fr) !important;
    gap: 35px !important;
    margin-top: 50px;
    margin-bottom: 150px;
  }
  .single_wishlist_product {
    box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
    padding: 10px;
    position: relative;
  }
  .remove_wishlist_icon {
    position: absolute;
    top: 0;
    right: -10px;
    cursor: pointer;
  }
  .remove_wishlist_icon{
    height: 25px;
    width: 25px;
    background-color: rgb(255, 255, 255);
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50px;
  }
  svg{
    display: flex;
  }
</style>
<h1 class="text-center mt-5 txt">Your Wishlist</h1>
<h3 class="text-center mt-5 txt empty_wishlist_message"></h3>
<div class="container wishlist_product_container" style="display: flex; gap:20px"></div>

<script>
  const wishlistList = localStorage.getItem('wishListAdd');
  let getStoredData = JSON.parse(wishlistList);
  console.log('wishlistList', getStoredData);

  console.log('getStoredData', getStoredData.length);
  document.querySelector('.wishlist_count_number').textContent = `${getStoredData.length}`;

  async function fetchData(item) {
    try {
      const response = await fetch(`/products/${item}.js`);
      const product = await response.json();

      // Process the data as needed
      console.log(`Data for ${item}:`, product);

      // const SinglewishListProduct = elementMaker('div', ['single_wishlist_product']);
      const SinglewishListProduct = document.createElement('div');
      SinglewishListProduct.classList.add('single_wishlist_product');
      SinglewishListProduct.innerHTML = ` 
      <img style="width:100%;height:200px;display:block;" src="${product.featured_image}">
      ${product.title} <br>BDT ${product.price}Tk <br> ${product.vendor} <br><button class=" btn btn-primary w-100 mt-4 quick-view-button" data-product-id="${product.handle}">Quick View</button> <span title="Remove From Wishlist" data-product-handle=${product.handle} class="remove_wishlist_icon" ><svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="#000" class="bi bi-x-circle-fill" viewBox="0 0 16 16">
      <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0M5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293z"/>
    </svg></span>`;

      document.querySelector('.wishlist_product_container').appendChild(SinglewishListProduct);
    } catch (error) {
      console.error(`Error fetching data for ${item}:`, error);
    }
  }

  async function fetchAllData() {
    for (const item of getStoredData) {
      await fetchData(item);
    }
  }

  // Call the function to start fetching data for each item
  fetchAllData();

  // remove from wishlist
  window.addEventListener('DOMContentLoaded', function () {
    setTimeout(() => {
      const single_wishlist_product = document.querySelector('.wishlist_product_container');
      if (single_wishlist_product) {
        document.querySelectorAll('.remove_wishlist_icon').forEach((removeButton) => {
          removeButton.addEventListener('click', function () {
            const productRemoveKey = removeButton.getAttribute('data-product-handle');
            // console.log('productRemoveKey', productRemoveKey);
            removeFromLocalStorage(productRemoveKey);
            const removeItem = removeButton.closest('.single_wishlist_product');
            removeItem.remove();
          });
        });

        // product section modal open
        const quickViewButtons = document.querySelectorAll('.quick-view-button');
        const quickViewModal = document.querySelector('.quick-view-modal');
        const quickViewContent = document.querySelector('.quick-view-content');
        const quickViewClose = document.querySelector('.quick-view-close');

        document.querySelectorAll('.quick-view-button').forEach((button) => {
          button.addEventListener('click', function () {
            const productId = button.getAttribute('data-product-id');
            console.log('productId', productId);

            fetch(`/products/${productId}`)
              .then((response) => response.text())
              .then((html) => {
                // Extract both HTML and JavaScript from the product section
                const productData = extractProductSection(html);

                // Update quickViewContent with the product section
                quickViewContent.innerHTML = productData.html;

                // Execute the extracted JavaScript code
                const scriptElement = document.createElement('script');
                scriptElement.textContent = productData.js;
                document.head.appendChild(scriptElement).parentNode.removeChild(scriptElement);

                // Display the modal
                quickViewModal.style.display = 'flex';
              });
          });
        });
        quickViewClose.addEventListener('click', function () {
          // Close the modal
          quickViewModal.style.display = 'none';
        });

        // Function to extract the product section from the HTML, including JavaScript
        function extractProductSection(html) {
          // Create a temporary element to hold the HTML
          const tempElement = document.createElement('div');
          tempElement.innerHTML = html;

          // Extract the product section
          const productSection = tempElement.querySelector('.product_main_wrapper');

          // Extract JavaScript code within the product section
          const productScripts = productSection.querySelectorAll('script');
          let jsCode = '';
          productScripts.forEach((script) => {
            jsCode += script.textContent + '\n';
          });

          // Return the HTML and JavaScript code
          return { html: productSection.innerHTML, js: jsCode };
        }
      }
    }, 2000);
  });

  // Function to remove an item from local storage by its value
  function removeFromLocalStorage(valueToRemove) {
    console.log('valueToRemove', valueToRemove);
    const getLocalItem = localStorage.getItem('wishListAdd');
    const GetArrayLocalItem = JSON.parse(getLocalItem);
    console.log('GetArrayLocalItem', GetArrayLocalItem);

    // Item to remove (change this to the item you want to remove)
    var itemToRemove = valueToRemove;

    // Find the index of the item in the array
    var indexToRemove = GetArrayLocalItem.indexOf(itemToRemove);

    // Check if the item is in the array before removing
    if (indexToRemove !== -1) {
      // Use splice to remove the item
      GetArrayLocalItem.splice(indexToRemove, 1);
      console.log('Item removed successfully');
      const updateWishList = JSON.stringify(GetArrayLocalItem);
      localStorage.setItem('wishListAdd', updateWishList);

      const previousProduct = localStorage.getItem('wishListAdd');
      const prevoiustLocalStorage = JSON.parse(previousProduct);
      console.log('prevoiustLocalStorage', prevoiustLocalStorage);
      document.querySelector('.wishlist_count_number').textContent = `${prevoiustLocalStorage.length}`;
      if (prevoiustLocalStorage.length == 0) {
        document.querySelector('.empty_wishlist_message').textContent = `Wishlist is Empty`;
      }
    } else {
      console.log('Item not found in the array');
    }
  }
</script>
<div class="quick-view-modal">
  <div class="quick-view-content">
    <!-- Product details will be rendered here -->
  </div>
  <div class="quick-view-close wishlist-page">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="25"
      height="25"
      fill="#FFF"
      class="bi bi-x-square"
      viewBox="0 0 16 16"
    >
      <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z"/>
      <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708"/>
    </svg>
  </div>
</div>

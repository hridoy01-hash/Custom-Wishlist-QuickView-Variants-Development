{% schema %}
{
  "name": "Quick View Product",
  "settings": [],
  "presets": [
    {
      "category": "product",
      "name": "Quick View Product"
    }
  ]
}
{% endschema %}

{% stylesheet %}
  /* Styles for the quick view modal */
  .quick-view-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    display: none;
    justify-content: center;
    align-items: center;
    z-index: 9999;
  }

  .quick-view-content {
    background: #fff;
    padding: 20px;
    overflow: auto;
    width: 1024px;
    height: 700px;
  }

  /* Styles for the quick view close button */
  .quick-view-close {
    position: absolute;
    top: 10px;
    right: 10px;
    cursor: pointer;
  }

  button.add_cart_btn {
    border: navajowhite;
    padding: 7px 10px;
    font-size: 14px;
  }

  /* modal galary image style */
  .galery_img ul {
    display: flex !important;
    flex-wrap: wrap;
    gap: 20px;
  }
  .galery_img ul li {
    height: 150px;
    width: 150px;
  }
{% endstylesheet %}

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const quickViewButtons = document.querySelectorAll('.quick-view-button');
    const quickViewModal = document.querySelector('.quick-view-modal');
    const quickViewContent = document.querySelector('.quick-view-content');
    const quickViewClose = document.querySelector('.quick-view-close');

    quickViewButtons.forEach((button) => {
      button.addEventListener('click', function () {
        const productId = button.dataset.productId;
        fetch(`/products/${productId}`)
          .then((response) => response.text())
          .then((html) => {
            // Extract both HTML and JavaScript from the product section
            const productData = extractProductSection(html);

            // Update quickViewContent with the product section
            quickViewContent.innerHTML = productData.html;

            // Execute the extracted JavaScript code
            const scriptElement = document.createElement('script');
            scriptElement.textContent = productData.js;
            document.head.appendChild(scriptElement).parentNode.removeChild(scriptElement);

            // Display the modal
            quickViewModal.style.display = 'flex';
          });
      });
    });

    quickViewClose.addEventListener('click', function () {
      // Close the modal
      quickViewModal.style.display = 'none';
    });

    // Function to extract the product section from the HTML, including JavaScript
    function extractProductSection(html) {
      // Create a temporary element to hold the HTML
      const tempElement = document.createElement('div');
      tempElement.innerHTML = html;

      // Extract the product section
      const productSection = tempElement.querySelector('.product_main_wrapper');

      // Extract JavaScript code within the product section
      const productScripts = productSection.querySelectorAll('script');
      let jsCode = '';
      productScripts.forEach((script) => {
        jsCode += script.textContent + '\n';
      });

      // Return the HTML and JavaScript code
      return { html: productSection.innerHTML, js: jsCode };
    }
  });
</script>

<div class="quick-view-modal">
  <div class="quick-view-content">
    <!-- Product details will be rendered here -->
  </div>
  <div class="quick-view-close">
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="25"
      height="25"
      fill="#FFF"
      class="bi bi-x-square"
      viewBox="0 0 16 16"
    >
      <path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z"/>
      <path d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708"/>
    </svg>
  </div>
</div>
